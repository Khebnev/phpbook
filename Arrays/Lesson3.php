<p>Как вы уже знаете, в обычных массивах элементы располагаются в строгом порядке, ведь позиция каждого элемента определяет его ключ. В ассоциативных массивах мы сами назначаем ключи, поэтому порядок следования элементов не имеет значения.</p>
<?php
	$arr = [1 => 'value1', 2 => 'value2', 3 => 'value3'];
	
	echo $arr[1]; // выведет 'value1'
	echo $arr[2]; // выведет 'value2'
	echo $arr[3]; // выведет 'value3'
?>
<?php
	$arr = [3 => 'value3', 1 => 'value1', 2 => 'value2'];
	
	echo $arr[1]; // выведет 'value1'
	echo $arr[2]; // выведет 'value2'
	echo $arr[3]; // выведет 'value3'
?>

<?php
	$arr = [7 => 'value1', 50 => 'value2', 23 => 'value3'];
	echo $arr[7];
	echo $arr[50];
	echo $arr[23];
?>

<p>Проверьте описанное на каком-нибудь из ваших ассоциативных массивов.</p>
<?php 
	$user = [1 => 'name', 23 => 'lastname', 201 => 'status'];
	echo $user[1] . ' ' . $user[23] . ' ' . $user[201];
?>