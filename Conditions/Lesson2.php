<?php
	$test = 'abc';
	
	if ($test == 'abc') {
		echo '+'; // сработает это, так как переменная равна 'abc'
	} else {
		echo '-';
	}
?>
<p>Числа в кавычках</p>
<p>Как вы знаете, число в кавычках представляет собой строку. Например, '3' - это строка. Однако, при сравнении таких строк с настоящими числами PHP считает, что строка в кавычках равна такому же числу.</p>

<p>Давайте для примера сравним строку '3' и число 3:</p>
<?php
	if ('3' == 3) {
		echo '+'; // сработает это - значения равны
	} else {
		echo '-';
	}
?>
<p>Равенство по значению и типу</p>
<p>Пусть вы хотите сравнивать так, чтобы число в кавычках не было равно такому же числу без кавычек. Говоря другими словами, вы хотите сравнивать так, чтобы сравнение было не только по значению, но и по типу данных. Для этого вместо оператора == следует использовать оператор ===.</p>
<?php
	if ('3' === 3) {
		echo '+';
	} else {
		echo '-'; // сработает это, тк значения не равны по типу
	}
?>
<?php
	if ('3' === '3') {
		echo '+'; // сработает это
	} else {
		echo '-';
	}
?>
<?php
	if (3 === 3) {
		echo '+'; // сработает это
	} else {
		echo '-';
	}
?>
<p>Неравенство по значению и типу</p>
<p>Кроме оператора != существует также оператор !==, учитывающий тип при сравнении. Давайте рассмотрим различия между ними на примерах.</p>

<p>Пусть с помощью оператора != сравниваются два числа 3. Данный оператор сравнивает значения на то, что они НЕ равны. Так как наши значения как раз-таки равны, то на экран выведется '-':</p>
<?php
	if ('3' !== 3) {
		echo '+'; // сработает это, так как значения НЕ равны
	} else {
		echo '-';
	}
?>
<?php
	$test1 = 3;
	$test2 = 2;
		
	if ($test1 !== $test2) {
		echo '+';
	} else {
		echo '-';
	}
?>
<p><b>Нюансы</b></p>
<p>Обратите внимание на следующий код:</p>
<?php
	if (0 == '') {
		echo '+'; // сработает это
	} else {
		echo '-';
	}
?>
<p>and</p>
<?php
	if (0 == '0') {
		echo '+'; // сработает это
	} else {
		echo '-';
	}
?>